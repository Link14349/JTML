{"version":3,"sources":["../src/index.js"],"names":["JTML","global","globalThis","DOMAIN","$","compileNow","compiler","defines","each","tag","cb","tags","children","i","length","$compiler","fun","name","hide","recursion","set","tokenName","value","gotName","gotValue","tokens","split","tmp","localName","text","t","undefined","eval","show","v","e","console","error","Error","define","compile","domain","tagJq","css","document","ready","jtml"],"mappings":"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","file":"index.js","sourcesContent":["const JTML = {};\nconst global = globalThis;\n\n!function (JTML) {\n    JTML.DOMAIN = $(null);\n    JTML.compileNow = true;\n    JTML.compiler = {};\n    JTML.defines = {};\n\n    JTML.each = function (tag, cb) {\n        let tags = tag.children();\n        for (let i = 0; i < tags.length; i++) {\n            if (!cb(tags[i])) JTML.each($(tags[i]), cb);\n        }\n    };\n\n    JTML.compiler.$compiler = function (fun, name = fun.name, hide = true, recursion = true) {\n        JTML.compiler[name] = fun;\n        JTML.compiler[name].hide = hide;\n        JTML.compiler[name].recursion = recursion;\n    };\n    JTML.compiler.$compiler(function set(tag) {\n        let tags = tag.children();\n        let tokenName = \"\", value = null;\n        let gotName = false, gotValue = false;\n        let i;\n        function set() {\n            let tokens = tokenName.split(\".\");\n            let tmp = global;\n            for (let i = 0; i < tokens.length - 1; i++) {\n                tmp = tmp[tokens[i]];\n            }\n            tmp[tokens[tokens.length - 1]] = value;\n            gotValue = false;\n            gotName = false;\n        }\n        for (i = 0; i < tags.length; i++) {\n            if (tags[i].localName == \"token\") {\n                tokenName = $(tags[i]).text();\n                gotName = true;\n                if (gotValue) {\n                    set();\n                }\n            }\n            if (tags[i].localName == \"value\") {\n                let t = $(tags[i]).text();\n                if (JTML.defines[t] !== undefined) t = JTML.defines[t];\n                value = eval(t);\n                gotValue = true;\n                if (gotName) {\n                    set();\n                }\n            }\n        }\n        return value;\n    }, \"set\", true, false);\n    JTML.compiler.$compiler(function show(tag) {\n        let v;\n        try {\n            let t = tag.text();\n            if (JTML.defines[t] !== undefined) t = JTML.defines[t];\n            v = eval(t);\n        } catch (e) {\n            console.error(new Error(\"Show expression error\"));\n            console.error(e);\n            return null;\n        }\n        tag.text(v);\n        return v;\n    }, \"show\", false, false);\n    JTML.compiler.$compiler(function define(tag) {\n        let tags = tag.children();\n        let tokenName = \"\", value = null;\n        let gotName = false, gotValue = false;\n        for (let i = 0; i < tags.length; i++) {\n            if (tags[i].localName == \"token\") {\n                tokenName = $(tags[i]).text();\n                gotName = true;\n                if (gotValue) {\n                    JTML.defines[tokenName] = value;\n                    gotValue = false;\n                    gotName = false;\n                }\n            }\n            if (tags[i].localName == \"value\") {\n                value = $(tags[i]).text();\n                gotValue = true;\n                if (gotName) {\n                    JTML.defines[tokenName] = value;\n                    gotValue = false;\n                    gotName = false;\n                }\n            }\n        }\n        return value;\n    }, \"define\", true, false);\n\n    JTML.compile = function (domain = JTML.DOMAIN) {\n        JTML.each(domain, function (tag) {\n            let compiler = JTML.compiler[tag.localName];\n            if (compiler) {// 存在这个jtml转义器\n                let tagJq = $(tag);\n                if (compiler.hide) tagJq.css(\"display\", \"none\");\n                compiler(tagJq);\n                return compiler.recursion;\n            }\n        });\n    };\n}(JTML);\n\n$(document).ready(function () {\n    JTML.DOMAIN = $(\"body:first\");\n\n    if (JTML.compileNow) JTML.compile();// 编译domain内容\n\n    // 编译所有jtml标签包裹的内容\n    let jtml = $(\"jtml\");\n    for (let i = 0; i < jtml.length; i++) {\n        JTML.compile($(jtml[i]));\n    }\n});"]}